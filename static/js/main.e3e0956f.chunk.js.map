{"version":3,"sources":["App.js","index.js"],"names":["App","useState","taskInput","setTaskInput","todosLocal","localStorage","getItem","undefined","JSON","parse","getTodosFromLocal","id","Math","random","value","completed","toDos","setToDos","inputError","setInputError","useEffect","setItem","stringify","handleInputError","errVal","className","onSubmit","e","preventDefault","length","prevToDos","autoFocus","type","placeholder","onChange","target","style","borderColor","map","todo","onClick","textDecoration","parentNode","classList","add","setTimeout","filter","handleDelete","rootElement","document","getElementById","createRoot","render"],"mappings":"iNAUe,SAASA,IACtB,MAAkCC,mBAAS,IAAG,mBAAvCC,EAAS,KAAEC,EAAY,KAC9B,EAA0BF,mBATF,WACxB,IAAMG,EAAaC,aAAaC,QAAQ,SACxC,YAAmBC,IAAfH,EACKI,KAAKC,MAAML,GAEb,IACT,CAIIM,IAAuB,CACrB,CAAEC,GAAIC,KAAKC,SAAUC,MAAO,eAAgBC,WAAW,KAE1D,mBAJMC,EAAK,KAAEC,EAAQ,KAKtB,EAAoChB,oBAAS,GAAM,mBAA5CiB,EAAU,KAAEC,EAAa,KAkBhCC,qBAAU,WACRf,aAAagB,QAAQ,QAASb,KAAKc,UAAUN,GAC/C,GAAG,CAACA,IACJ,IAMMO,EAAmB,SAACC,GACxBL,EAAcK,EAChB,EASA,OACE,sBAAKC,UAAU,MAAK,UAClB,6BAAI,uBAEJ,uBAAMA,UAAU,iBAAiBC,SApCjB,SAACC,GACnBA,EAAEC,iBACG1B,EAAU2B,QAIfZ,GAAS,SAACa,GAAS,4BACdA,GAAS,CACZ,CAAEnB,GAAIC,KAAKC,SAAUC,MAAOZ,EAAWa,WAAW,IAAO,IAE3DZ,EAAa,KAPXoB,GAAiB,EAQrB,EAyB2D,UACpDL,GAAc,gCAAO,oCACtB,uBACEa,WAAS,EACTC,KAAK,OACLlB,MAAOZ,EACP+B,YAAY,cACZC,SA/Ca,SAACP,GACpBJ,GAAiB,GACjBpB,EAAawB,EAAEQ,OAAOrB,MACxB,EA6CQsB,MAAO,CAAEC,YAAanB,EAAa,MAAQ,iBAE7C,wBAAQc,KAAK,SAAQ,SAAC,iBAExB,8BACE,6BACGhB,EAAMsB,KAAI,SAACC,GAAI,OACd,qBAEEC,QAAS,kBA7BI7B,EA6BkB4B,EAAK5B,QA5B9CM,GAAS,SAACa,GACR,OAAOA,EAAUQ,KAAI,SAACC,GAAI,OACxBA,EAAK5B,KAAOA,EAAE,2BAAQ4B,GAAI,IAAExB,WAAYwB,EAAKxB,YAAcwB,CAAI,GAEnE,IALsB,IAAC5B,CA6B0B,EACvCyB,MAAO,CACLK,eAAgBF,EAAKxB,UAAY,eAAiB,QAClD,UAEDwB,EAAKzB,MACN,wBACEW,UAAU,aACVe,QAAS,SAACb,GAAC,OA9CJ,SAACA,EAAGhB,GACvBgB,EAAEQ,OAAOO,WAAWC,UAAUC,IAAI,WAClCC,YAAW,WACT5B,GAAS,SAACa,GAAS,OAAKA,EAAUgB,QAAO,SAACP,GAAI,OAAKA,EAAK5B,KAAOA,CAAE,GAAC,GACpE,GAAG,IACL,CAyC8BoC,CAAapB,EAAGY,EAAK5B,GAAG,EAAC,SAC1C,QAVI4B,EAAK5B,GAaP,UAMjB,CCzFA,IAAMqC,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OACH,cAAC,aAAU,UACT,cAACpD,EAAG,M","file":"static/js/main.e3e0956f.chunk.js","sourcesContent":["import \"./styles.css\";\nimport { useEffect, useState } from \"react\";\n\nconst getTodosFromLocal = () => {\n  const todosLocal = localStorage.getItem(\"todos\");\n  if (todosLocal !== undefined) {\n    return JSON.parse(todosLocal);\n  }\n  return null;\n};\nexport default function App() {\n  const [taskInput, setTaskInput] = useState(\"\");\n  const [toDos, setToDos] = useState(\n    getTodosFromLocal() || [\n      { id: Math.random(), value: \"Sample To-Do\", completed: false }\n    ]\n  );\n  const [inputError, setInputError] = useState(false);\n\n  const inputHandler = (e) => {\n    handleInputError(false);\n    setTaskInput(e.target.value);\n  };\n  const toDoHandler = (e) => {\n    e.preventDefault();\n    if (!taskInput.length) {\n      handleInputError(true);\n      return;\n    }\n    setToDos((prevToDos) => [\n      ...prevToDos,\n      { id: Math.random(), value: taskInput, completed: false }\n    ]);\n    setTaskInput(\"\");\n  };\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(toDos));\n  }, [toDos]);\n  const handleDelete = (e, id) => {\n    e.target.parentNode.classList.add(\"deleted\");\n    setTimeout(() => {\n      setToDos((prevToDos) => prevToDos.filter((todo) => todo.id !== id));\n    }, 510);\n  };\n  const handleInputError = (errVal) => {\n    setInputError(errVal);\n  };\n  const toggleTaskState = (id) => {\n    setToDos((prevToDos) => {\n      return prevToDos.map((todo) =>\n        todo.id === id ? { ...todo, completed: !todo.completed } : todo\n      );\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Simplest To-Do App</h1>\n\n      <form className=\"inputContainer\" onSubmit={toDoHandler}>\n        {inputError && <small> Please type something first...</small>}\n        <input\n          autoFocus\n          type=\"text\"\n          value={taskInput}\n          placeholder=\"Type a task\"\n          onChange={inputHandler}\n          style={{ borderColor: inputError ? \"red\" : \"transparent\" }}\n        />\n        <button type=\"submit\">Add To-Do</button>\n      </form>\n      <div>\n        <ul>\n          {toDos.map((todo) => (\n            <li\n              key={todo.id}\n              onClick={() => toggleTaskState(todo.id)}\n              style={{\n                textDecoration: todo.completed ? \"line-through\" : \"none\"\n              }}\n            >\n              {todo.value}\n              <button\n                className=\"delete-btn\"\n                onClick={(e) => handleDelete(e, todo.id)}\n              >\n                X\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}